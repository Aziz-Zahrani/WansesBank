/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wansesbank;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.util.Random;
import javax.swing.JFrame;
import net.proteanit.sql.DbUtils;

public class AccountEdit extends javax.swing.JDialog {
    
    private static final String USERNAME= "wansesco_wans";
    private static final String PASSWORD= "xzMAsW1WQ8Lg";
    private static final String CONN_STRING= "jdbc:mysql://wanses.com:3306/wansesco_wanses";
    private final String char_list = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_";
    private int Cusid;
    
    
    
    public void updateBalance(){
                try (
                Connection connection = DriverManager.getConnection(CONN_STRING, USERNAME, PASSWORD);
                Statement statement = connection.createStatement();
                ResultSet resultset = statement.executeQuery("SELECT BALANCE,ACCTYPE,ACC_ID FROM ACCOUNT WHERE Cust_ID=" +Cusid);) {

            while (resultset.next()) {
                if (resultset.getInt(2) == 1) {
                    checkingbal.setText(String.format("%.2f",resultset.getDouble(1)));
                    checkingid.setText(""+resultset.getInt(3));
                } else if (resultset.getInt(2) == 2) {
                    savingbal.setText(String.format("%.2f",resultset.getDouble(1)));
                    savingid.setText(""+resultset.getInt(3));
                }
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
       }
    private AccountEdit(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    public AccountEdit(java.awt.Frame parent, boolean modal, int cus) {
        super(parent, modal);
        
        initComponents();
        Cusid=cus;
        updateBalance();
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cancelbutton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        checkingfield = new javax.swing.JTextField();
        withchecking = new javax.swing.JButton();
        depchecking = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        checkingbal = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        checkingid = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        depsaving = new javax.swing.JButton();
        savingfield = new javax.swing.JTextField();
        withsaving = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        savingbal = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        savingid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Register Form");
        setResizable(false);

        jPanel1.setLayout(null);

        cancelbutton.setText("Done");
        cancelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelbutton);
        cancelbutton.setBounds(120, 320, 100, 30);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Checking Account"));
        jPanel2.setLayout(null);

        checkingfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        checkingfield.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(226, 226, 226)));
        checkingfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkingfieldKeyTyped(evt);
            }
        });
        jPanel2.add(checkingfield);
        checkingfield.setBounds(30, 50, 240, 25);

        withchecking.setText("Withdraw");
        withchecking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withcheckingActionPerformed(evt);
            }
        });
        jPanel2.add(withchecking);
        withchecking.setBounds(30, 80, 100, 32);

        depchecking.setText("Deposit");
        depchecking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depcheckingActionPerformed(evt);
            }
        });
        jPanel2.add(depchecking);
        depchecking.setBounds(170, 80, 100, 32);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setText("Balance: ");
        jPanel4.add(jLabel2);

        checkingbal.setText("0.0");
        jPanel4.add(checkingbal);

        jPanel2.add(jPanel4);
        jPanel4.setBounds(120, 30, 150, 20);

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setText("ID: ");
        jPanel6.add(jLabel3);

        checkingid.setText("null");
        jPanel6.add(checkingid);

        jPanel2.add(jPanel6);
        jPanel6.setBounds(30, 30, 90, 20);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(20, 20, 300, 130);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Saving Account"));
        jPanel3.setLayout(null);

        depsaving.setText("Deposit");
        depsaving.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depsavingActionPerformed(evt);
            }
        });
        jPanel3.add(depsaving);
        depsaving.setBounds(170, 80, 100, 32);

        savingfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        savingfield.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(226, 226, 226)));
        savingfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                savingfieldKeyTyped(evt);
            }
        });
        jPanel3.add(savingfield);
        savingfield.setBounds(30, 50, 240, 25);

        withsaving.setText("Withdraw");
        withsaving.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withsavingActionPerformed(evt);
            }
        });
        jPanel3.add(withsaving);
        withsaving.setBounds(30, 80, 100, 32);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("Balance: ");
        jPanel5.add(jLabel1);

        savingbal.setText("0.0");
        jPanel5.add(savingbal);

        jPanel3.add(jPanel5);
        jPanel5.setBounds(120, 30, 150, 20);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.LINE_AXIS));

        jLabel4.setText("ID: ");
        jPanel7.add(jLabel4);

        savingid.setText("null");
        jPanel7.add(savingid);

        jPanel3.add(jPanel7);
        jPanel7.setBounds(30, 30, 90, 20);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(20, 180, 300, 130);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbuttonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelbuttonActionPerformed

    private void checkingfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkingfieldKeyTyped

        if (!(Character.isDigit(evt.getKeyChar()) || evt.getKeyChar() == KeyEvent.VK_BACK_SPACE || evt.getKeyChar() == KeyEvent.VK_DELETE || evt.getKeyChar() == KeyEvent.VK_PERIOD ))
        evt.consume();
        if(checkingfield.getText().length() >= 10)
        evt.consume();
    }//GEN-LAST:event_checkingfieldKeyTyped

    private void depcheckingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depcheckingActionPerformed
        if (!checkingfield.getText().isEmpty()) {
                try (
                    Connection connection = DriverManager.getConnection(CONN_STRING, USERNAME, PASSWORD);
                    Statement statement = connection.createStatement();
                    ResultSet resultset = statement.executeQuery("SELECT Balance FROM ACCOUNT WHERE Cust_ID=" + Cusid + " AND AccType=" + 1);) {
                    resultset.next();
                        statement.executeUpdate("UPDATE ACCOUNT SET balance=balance+" + Double.parseDouble(checkingfield.getText()) + " WHERE Cust_ID=" + Cusid + " AND AccType=" + 1);
                        //balancecashlabel1.setText(String.format("%.2f", databalance - Double.parseDouble(transactfield.getText())));

                } catch (SQLException e) {
                    checkingfield.setText("");
                } catch (Exception e) {
                    checkingfield.setText("");
                }   
        }
        updateBalance();
    }//GEN-LAST:event_depcheckingActionPerformed

    private void withcheckingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withcheckingActionPerformed
        if (!checkingfield.getText().isEmpty()) {
                try (
                    Connection connection = DriverManager.getConnection(CONN_STRING, USERNAME, PASSWORD);
                    Statement statement = connection.createStatement();
                    ResultSet resultset = statement.executeQuery("SELECT Balance FROM ACCOUNT WHERE Cust_ID=" + Cusid + " AND AccType=" + 1);) {
                    resultset.next();
                    double databalance = resultset.getDouble(1);
                    if (databalance >= Double.parseDouble(checkingfield.getText())) {
                        statement.executeUpdate("UPDATE ACCOUNT SET balance=balance-" + Double.parseDouble(checkingfield.getText()) + " WHERE Cust_ID=" + Cusid + " AND AccType=" + 1);
                        //balancecashlabel1.setText(String.format("%.2f", databalance - Double.parseDouble(transactfield.getText())));
                    } else {
                       JOptionPane.showMessageDialog(null, "Not enough balance");
                    }
                    
                } catch (SQLException e) {
                    checkingfield.setText("");
                } catch (Exception e) {
                    checkingfield.setText("");
                }

        }
        updateBalance();
    }//GEN-LAST:event_withcheckingActionPerformed

    private void depsavingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depsavingActionPerformed
        if (!checkingfield.getText().isEmpty()) {
                try (
                    Connection connection = DriverManager.getConnection(CONN_STRING, USERNAME, PASSWORD);
                    Statement statement = connection.createStatement();
                    ResultSet resultset = statement.executeQuery("SELECT Balance FROM ACCOUNT WHERE Cust_ID=" + Cusid + " AND AccType=" + 1);) {
                    resultset.next();
                        statement.executeUpdate("UPDATE ACCOUNT SET balance=balance+" + Double.parseDouble(checkingfield.getText()) + " WHERE Cust_ID=" + Cusid + " AND AccType=" + 2);
                        //balancecashlabel1.setText(String.format("%.2f", databalance - Double.parseDouble(transactfield.getText())));

                } catch (SQLException e) {
                    checkingfield.setText("");
                } catch (Exception e) {
                    checkingfield.setText("");
                }   
        }
        updateBalance();
    }//GEN-LAST:event_depsavingActionPerformed

    private void withsavingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withsavingActionPerformed
        if (!checkingfield.getText().isEmpty()) {
                try (
                    Connection connection = DriverManager.getConnection(CONN_STRING, USERNAME, PASSWORD);
                    Statement statement = connection.createStatement();
                    ResultSet resultset = statement.executeQuery("SELECT Balance FROM ACCOUNT WHERE Cust_ID=" + Cusid + " AND AccType=" + 1);) {
                    resultset.next();
                    double databalance = resultset.getDouble(1);
                    if (databalance >= Double.parseDouble(checkingfield.getText())) {
                        statement.executeUpdate("UPDATE ACCOUNT SET balance=balance-" + Double.parseDouble(checkingfield.getText()) + " WHERE Cust_ID=" + Cusid + " AND AccType=" + 2);
                        //balancecashlabel1.setText(String.format("%.2f", databalance - Double.parseDouble(transactfield.getText())));
                    } else {
                       JOptionPane.showMessageDialog(null, "Not enough balance");
                    }
                    
                } catch (SQLException e) {
                    checkingfield.setText("");
                } catch (Exception e) {
                    checkingfield.setText("");
                }

        }
        updateBalance();
    }//GEN-LAST:event_withsavingActionPerformed

    private void savingfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_savingfieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_savingfieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AccountEdit dialog = new AccountEdit(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelbutton;
    private javax.swing.JLabel checkingbal;
    private javax.swing.JTextField checkingfield;
    private javax.swing.JLabel checkingid;
    private javax.swing.JButton depchecking;
    private javax.swing.JButton depsaving;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel savingbal;
    private javax.swing.JTextField savingfield;
    private javax.swing.JLabel savingid;
    private javax.swing.JButton withchecking;
    private javax.swing.JButton withsaving;
    // End of variables declaration//GEN-END:variables
}
